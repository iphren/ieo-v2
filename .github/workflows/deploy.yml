name: Deploy web application

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npm test

      - name: Generate build
        env:
          VITE_IEO_API_URL: ${{ vars.VITE_IEO_API_URL }}
        run: npm run build

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize backend
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
          TF_STATE_KEY: ${{ vars.TF_STATE_KEY }}
          TF_STATE_REGION: ${{ vars.TF_STATE_REGION }}
        run: >
          terraform init
          -backend-config="bucket=${TF_STATE_BUCKET}"
          -backend-config="key=${TF_STATE_KEY}"
          -backend-config="region=${TF_STATE_REGION}"

      - name: Validate configuration
        working-directory: ./terraform
        run: terraform validate

      - name: Deploy infrastructure
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_app_bucket: ${{ vars.TF_VAR_app_bucket }}
          TF_VAR_app_id: ${{ vars.TF_VAR_app_id }}
          TF_VAR_aws_cert_arn: ${{ vars.TF_VAR_aws_cert_arn }}
          TF_VAR_aws_profile: ${{ vars.TF_VAR_aws_profile }}
          TF_VAR_aws_region: ${{ vars.TF_VAR_aws_region }}
          TF_VAR_domain_name: ${{ vars.TF_VAR_domain_name }}
          TF_VAR_project: ${{ vars.TF_VAR_project }}
        run: terraform plan
#        run: terraform apply -auto-approve
